services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: testshop_frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api-gateway

  user-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: testshop_user_service
    env_file:
      - ./backend/apps/user-service/.env
    environment:
      SERVICE: user-service
    command: npm run start:user-service:dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres

  inventory-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: testshop_inventory_service
    env_file:
      - ./backend/apps/inventory-service/.env
    environment:
      SERVICE: inventory-service
    command: npm run start:inventory-service:dev
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - postgres

  api-gateway:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: testshop_api_gateway
    env_file:
      - ./backend/apps/api-gateway/.env
    environment:
      SERVICE: api-gateway
    command: npm run start:api-gateway:dev
    ports:
      - "4000:4000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - user-service
      - inventory-service

  postgres:
    image: postgres:16.5
    container_name: testshop_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
  backend_node_modules: